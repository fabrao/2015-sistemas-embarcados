CCS PCH C Compiler, Version 4.074, 38112               13-nov-14 20:23

               Filename: E:\Dropbox\__UTFPR-CP__\Período 8.5\Sistemas Embarcados\Atividades apostila\Atividade2\atividade2.lst

               ROM used: 614 bytes (2%)
                         Largest free fragment is 32154
               RAM used: 28 (2%) at main() level
                         31 (2%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   0176
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
....................  
.................... #use delay(clock = 20000000) 
.................... #fuses HS, NOWDT, NOPROTECT, NOLVP 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... #use rtos(timer=0, minor_cycle=100ms) 
....................  
.................... int8 counter; 
....................  
.................... #task (rate=4000ms,max=100ms) 
.................... void The_first_rtos_task(); 
....................  
.................... #task (rate=2000ms,max=100ms) 
.................... void The_second_rtos_task(); 
....................  
.................... #task (rate=1000ms,max=100ms) 
.................... void The_third_rtos_task(); 
....................  
....................  
.................... void The_first_rtos_task(){ 
....................    printf("Task 1\n\r"); 
00C0:  CLRF   1C
00C2:  MOVF   1C,W
00C4:  RCALL  0004
00C6:  INCF   1C,F
00C8:  MOVWF  00
00CA:  MOVF   00,W
00CC:  BTFSS  F9E.4
00CE:  BRA    00CC
00D0:  MOVWF  FAD
00D2:  MOVLW  08
00D4:  SUBWF  1C,W
00D6:  BNZ   00C2
....................     
....................    if(counter==3){ 
00D8:  MOVF   06,W
00DA:  SUBLW  03
00DC:  BNZ   00F8
....................       printf("Task 3 disable by Task 1\n\r"); 
00DE:  CLRF   1C
00E0:  MOVF   1C,W
00E2:  RCALL  001E
00E4:  INCF   1C,F
00E6:  MOVWF  00
00E8:  MOVF   00,W
00EA:  BTFSS  F9E.4
00EC:  BRA    00EA
00EE:  MOVWF  FAD
00F0:  MOVLW  1A
00F2:  SUBWF  1C,W
00F4:  BNZ   00E0
....................       rtos_disable(The_third_rtos_task); 
00F6:  BSF    15.7
....................    } 
.................... } 
00F8:  MOVLW  C0
00FA:  MOVWF  0C
00FC:  MOVLW  00
00FE:  MOVWF  0D
0100:  GOTO   0248
0104:  RETLW  00
....................  
.................... void The_second_rtos_task(){ 
....................    printf("Task 2\n\r"); 
0106:  CLRF   1D
0108:  MOVF   1D,W
010A:  RCALL  004A
010C:  INCF   1D,F
010E:  MOVWF  00
0110:  MOVF   00,W
0112:  BTFSS  F9E.4
0114:  BRA    0112
0116:  MOVWF  FAD
0118:  MOVLW  08
011A:  SUBWF  1D,W
011C:  BNZ   0108
....................     
....................    if(++counter==10){ 
011E:  INCF   06,F
0120:  MOVF   06,W
0122:  SUBLW  0A
0124:  BNZ   0142
....................          counter=0; 
0126:  CLRF   06
....................          printf("Task 3 disable by Task 2\n\r"); 
0128:  CLRF   1D
012A:  MOVF   1D,W
012C:  RCALL  0064
012E:  INCF   1D,F
0130:  MOVWF  00
0132:  MOVF   00,W
0134:  BTFSS  F9E.4
0136:  BRA    0134
0138:  MOVWF  FAD
013A:  MOVLW  1A
013C:  SUBWF  1D,W
013E:  BNZ   012A
....................       rtos_disable(The_third_rtos_task); 
0140:  BSF    15.7
....................    } 
.................... } 
0142:  MOVLW  06
0144:  MOVWF  13
0146:  MOVLW  01
0148:  MOVWF  14
014A:  GOTO   0248
014E:  RETLW  00
....................  
.................... void The_third_rtos_task(){ 
....................    printf("Task 3\n\r"); 
0150:  CLRF   1E
0152:  MOVF   1E,W
0154:  RCALL  0090
0156:  INCF   1E,F
0158:  MOVWF  00
015A:  MOVF   00,W
015C:  BTFSS  F9E.4
015E:  BRA    015C
0160:  MOVWF  FAD
0162:  MOVLW  08
0164:  SUBWF  1E,W
0166:  BNZ   0152
.................... } 
0168:  MOVLW  50
016A:  MOVWF  1A
016C:  MOVLW  01
016E:  MOVWF  1B
0170:  GOTO   0248
0174:  RETLW  00
....................  
.................... void main(){ 
0176:  CLRF   FF8
0178:  BCF    FD0.7
017A:  CLRF   FEA
017C:  CLRF   FE9
017E:  MOVLW  81
0180:  MOVWF  FAF
0182:  MOVLW  A6
0184:  MOVWF  FAC
0186:  MOVLW  90
0188:  MOVWF  FAB
018A:  BSF    FC1.0
018C:  BSF    FC1.1
018E:  BSF    FC1.2
0190:  BCF    FC1.3
....................    counter=0; 
0192:  CLRF   06
....................    rtos_run(); 
0194:  CLRF   07
0196:  CLRF   09
0198:  MOVLW  28
019A:  MOVWF  08
019C:  CLRF   0B
019E:  MOVLW  02
01A0:  MOVWF  0A
01A2:  MOVLW  C0
01A4:  MOVWF  0C
01A6:  MOVLW  00
01A8:  MOVWF  0D
01AA:  CLRF   0E
01AC:  CLRF   10
01AE:  MOVLW  14
01B0:  MOVWF  0F
01B2:  CLRF   12
01B4:  MOVLW  01
01B6:  MOVWF  11
01B8:  MOVLW  06
01BA:  MOVWF  13
01BC:  MOVLW  01
01BE:  MOVWF  14
01C0:  CLRF   15
01C2:  CLRF   17
01C4:  MOVLW  0A
01C6:  MOVWF  16
01C8:  CLRF   19
01CA:  CLRF   18
01CC:  MOVLW  50
01CE:  MOVWF  1A
01D0:  MOVLW  01
01D2:  MOVWF  1B
01D4:  CLRF   05
01D6:  MOVLW  82
01D8:  MOVWF  FD5
01DA:  MOVLW  0B
01DC:  MOVWF  FD7
01DE:  MOVLW  DC
01E0:  MOVWF  FD6
01E2:  BCF    FF2.2
01E4:  MOVLW  82
01E6:  MOVWF  FD5
01E8:  MOVLW  0B
01EA:  MOVWF  FD7
01EC:  MOVLW  DC
01EE:  MOVWF  FD6
01F0:  BCF    FF2.2
01F2:  BCF    FD8.0
01F4:  RLCF   05,W
01F6:  MOVWF  00
01F8:  RCALL  00AA
01FA:  MOVWF  02
01FC:  MOVLW  01
01FE:  ADDWF  00,W
0200:  RCALL  00AA
0202:  MOVWF  FEA
0204:  MOVFF  02,FE9
0208:  MOVFF  FEF,02
020C:  INCF   FE9,F
020E:  MOVFF  FEF,00
0212:  MOVFF  FEC,01
0216:  INCF   FEC,F
0218:  MOVFF  FEF,03
021C:  BNZ   0222
021E:  INCF   FEC,F
0220:  MOVF   FED,F
0222:  MOVF   FEC,W
0224:  SUBWF  01,W
0226:  BNZ   024A
0228:  MOVF   00,W
022A:  SUBWF  03,W
022C:  BNZ   024A
022E:  MOVF   FED,F
0230:  MOVF   FED,F
0232:  CLRF   FEE
0234:  CLRF   FEE
0236:  BTFSC  02.7
0238:  BRA    024A
023A:  MOVF   FEC,F
023C:  MOVFF  FEC,FFA
0240:  MOVF   FED,F
0242:  MOVFF  FEF,FE8
0246:  MOVWF  FF9
0248:  MOVLB  0
024A:  INCF   05,F
024C:  MOVLW  03
024E:  SUBWF  05,W
0250:  BNZ   01F2
0252:  CLRF   05
0254:  MOVF   FD6,W
0256:  MOVFF  FD7,03
025A:  BTFSC  FF2.2
025C:  BRA    01E8
025E:  BRA    0254
0260:  MOVLW  FF
0262:  MOVWF  05
.................... } 
0264:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   BROWNOUT WDT128 NOWDT BORV20 PUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
